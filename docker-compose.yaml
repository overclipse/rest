# Конфигурация Docker Compose для сервисов приложения
services:
  # База данных PostgreSQL для сервиса авторизации
  db_auth:
    # Образ PostgreSQL версии 14 с использованием Alpine Linux
    image: postgres:14-alpine
    # Имя контейнера
    container_name: db_auth
    # Переменные окружения для PostgreSQL
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # Тома для хранения данных PostgreSQL
    volumes:
      - db_auth_vol:/var/lib/postgresql/data
    # Перезапускать контейнер при сбое
    restart: always
    # # Внутренняя сеть для связи между сервисами
    networks:
      - notes_net

  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./auth/Dockerfile
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    environment:
      PORT: ${AUTH_PORT}
      HOST: ${AUTH_HOST}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USE_SSL: ${POSTGRES_USE_SSL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ACCESS_TOKEN_EXPIRATION: ${JWT_ACCESS_TOKEN_EXPIRATION}
      JWT_REFRESH_TOKEN_EXPIRATION: ${JWT_REFRESH_TOKEN_EXPIRATION}
      SERVER_TIMEOUT: ${SERVER_TIMEOUT}
      DB_TIMEOUT: ${DB_TIMEOUT}
    depends_on:
      - db_auth
    restart: always
    networks:
      - notes_net

networks:
  notes_net:
    driver: bridge

volumes:
  db_auth_vol:  
    driver: local
